@model IEnumerable<ProjectForHealing.Models.Resource>


@{
    ViewData["Title"] = "Welcome";

}

<style>

    #cats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 3fr) );
        grid-auto-rows: 150px;
    }

    .container-box {
        text-align: center;
    }

    ::-webkit-scrollbar {
        width: 12px;
    }

    ::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(245, 183, 24, .4);
        border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgba(242, 188, 48, .6);
    }
</style>

<div class="jumbotron text-xl-center mt-0 mb-0 text-black-50" style="background-size:cover; border-radius:0px; ">
    <div class="container-fluid border rounded">
        <div class="container middlebody">

            <h1 class="display-3"><img src="~/Images/Neighborly-logo.png " alt="Neighborly" style="width:60%;height:25%;"></h1>
            <p class="lead">
                Neighborly is an online resource guide created to help residents in Northeast Florida better navigate the resources available in their areas.
                Neighborly features the locations and information on providers of core services such as food, housing, and legal aid.
            </p>
            <p class="lead">
                Neighborly runs on a crowdsourcing-based platform. This means that you can add service providers to our system yourself. We will then screen,
                edit, and approve the items you requested to be added to the system. To learn more about Neighborly, click <a href="/Home/About" style="color:#2780E3;">here.</a>
            </p>
            <p class="lead">

                @*<a class="btn btn-prim btn-lg rounded" href="https://www.weavetales.org/what-we-do" role="button">About Weavetales</a>*@
                <a class="btn btn-prim btn-lg rounded" href="#mapDiv" role="button">Get Neighborly</a>

            </p>
        </div>

        <div class="row">
            <div class="col">
                <hr class="my-4">
                <p class="lead">First time? Watch the short video below to learn how to use Neighborly.</p>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-8">
                <iframe src="https://player.vimeo.com/video/417363915" width="750" height="450" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>
            </div>

        </div>

        <div class="row justify-content-center">
            <div class="col">
                <a class="twitter-timeline mt-4" data-width="750" data-height="450" data-theme="dark" href="https://twitter.com/NeighborlyGuide?ref_src=twsrc%5Etfw">Tweets by NeighborlyGuide</a>
                <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
            </div>
        </div>
    </div>
</div>


<div class="container-fluid middlebody mt-0">

    <div class="row justify-content-center" id="mapDiv">
        <div class="col col-12 px-4 pt-3 pb-lg-5 border border-3 border-warning-outer pt-3" style="background-color: #373a3c;">
            <div class="pb-3 row">
                <div class="col-2 text-center border border-top-0 border-3 border-warning-outer">
                    <h3 class="text-white">Filter Category</h3>
                </div>
                <div class="col"></div>
                <div class="col-3 d-flex justify-content-end">
                    <div class="form-inline my-lg-0 pr-0 d-inline-flex ">
                        <input class="form-control form-inline mr-sm-2" type="text" placeholder="Search an address!" id="mapSearch" name="search">

                    </div>
                    <div class="form-inline my-lg-0 pr-0 d-inline-flex ">
                        <button class="btn btn-secondary border rounded my-2 my-sm-0 align-content-start" type="button" onclick="return setMap();">Search</button>
                    </div>
                </div>

            </div>

            <div class="row">

                <div class="col-2">
                    <div class="container-fluid text-white" id="categories" style="height:750px; line-height:3.2em; overflow:auto;">
                        <div class="wrapper mx-1" id="cats"></div>
                    </div>
                </div>

                <div class="col-10">
                    <div class="container-fluid form-control mb-3" id='map' style="height: 750px;"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-2 border-bottom border-warning-outer"></div>
            </div>
        </div>
    </div>
</div>






@section Scripts    {
    <script type="text/javascript">
            var selectedMarkers = [];
            var markers = [];
            var map, infoWindow;

            function toggleMarker(element, type) {
                var on = element.checked;
                for (var i = 0; i < markers.length; i++) {
                    if (markers[i].type == type) {
                        markers[i].marker.setMap(on ? map : null);
                    }
                }
            }

                function setMap() {

                geocoder = new google.maps.Geocoder();
                var address = document.getElementById('mapSearch').value;
                var coordinates;
                geocoder.geocode({ 'address': address }, function (results, status) {
                    if (status == 'OK') {

                        coordinates = results[0].geometry.location;
                        map.setCenter(coordinates);

                        infoWindow = new google.maps.InfoWindow;
                        infoWindow.setPosition(coordinates);
                        infoWindow.setContent(address.toUpperCase());
                        infoWindow.open(map);
                    } else {
                        alert('No address found at that location. Please double check your resource Street Address, City & Zip Code. ');
                    }
                });
            }



            function initMap() {
                $(document).ready(function () {
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: { lat: 30.260973, lng: -81.623245 },
                        zoom: 13,
                        styles: [
                        {
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "color": "#ebe3cd"
                            }
                        ]
                        },
                        {
                        "elementType": "labels",
                        "stylers": [
                            {
                            "visibility": "off"
                            }
                        ]
                        },
                        {
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                            "color": "#523735"
                            }
                        ]
                        },
                        {
                        "elementType": "labels.text.stroke",
                        "stylers": [
                            {
                            "color": "#f5f1e6"
                            }
                        ]
                        },
                        {
                        "featureType": "administrative",
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "visibility": "off"
                            }
                        ]
                        },
                        {
                        "featureType": "administrative",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                            "color": "#c9b2a6"
                            }
                        ]
                        },
                        {
                        "featureType": "administrative.land_parcel",
                        "stylers": [
                            {
                            "visibility": "off"
                            }
                        ]
                        },
                        {
                        "featureType": "administrative.land_parcel",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                            "color": "#dcd2be"
                            }
                        ]
                        },
                        {
                        "featureType": "administrative.land_parcel",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                            "color": "#ae9e90"
                            }
                        ]
                        },
                        {
                        "featureType": "administrative.neighborhood",
                        "stylers": [
                            {
                            "visibility": "off"
                            }
                        ]
                        },
                        {
                        "featureType": "landscape.natural",
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "color": "#dfd2ae"
                            }
                        ]
                        },
                        {
                        "featureType": "poi",
                        "stylers": [
                            {
                            "visibility": "off"
                            }
                        ]
                        },
                        {
                        "featureType": "poi",
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "color": "#dfd2ae"
                            }
                        ]
                        },
                        {
                        "featureType": "poi",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                            "color": "#93817c"
                            }
                        ]
                        },
                        {
                        "featureType": "poi.park",
                        "elementType": "geometry.fill",
                        "stylers": [
                            {
                            "color": "#a5b076"
                            }
                        ]
                        },
                        {
                        "featureType": "poi.park",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                            "color": "#447530"
                            }
                        ]
                        },
                        {
                        "featureType": "road",
                        "stylers": [
                            {
                            "visibility": "off"
                            }
                        ]
                        },
                        {
                        "featureType": "road",
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "color": "#f5f1e6"
                            }
                        ]
                        },
                        {
                        "featureType": "road",
                        "elementType": "labels.icon",
                        "stylers": [
                            {
                            "visibility": "off"
                            }
                        ]
                        },
                        {
                        "featureType": "road.arterial",
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "color": "#fdfcf8"
                            }
                        ]
                        },
                        {
                        "featureType": "road.highway",
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "color": "#f8c967"
                            }
                        ]
                        },
                        {
                        "featureType": "road.highway",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                            "color": "#e9bc62"
                            }
                        ]
                        },
                        {
                        "featureType": "road.highway.controlled_access",
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "color": "#e98d58"
                            }
                        ]
                        },
                        {
                        "featureType": "road.highway.controlled_access",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                            "color": "#db8555"
                            }
                        ]
                        },
                        {
                        "featureType": "road.local",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                            "color": "#806b63"
                            }
                        ]
                        },
                        {
                        "featureType": "transit",
                        "stylers": [
                            {
                            "visibility": "off"
                            }
                        ]
                        },
                        {
                        "featureType": "transit.line",
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "color": "#dfd2ae"
                            }
                        ]
                        },
                        {
                        "featureType": "transit.line",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                            "color": "#8f7d77"
                            }
                        ]
                        },
                        {
                        "featureType": "transit.line",
                        "elementType": "labels.text.stroke",
                        "stylers": [
                            {
                            "color": "#ebe3cd"
                            }
                        ]
                        },
                        {
                        "featureType": "transit.station",
                        "elementType": "geometry",
                        "stylers": [
                            {
                            "color": "#dfd2ae"
                            }
                        ]
                        },
                        {
                        "featureType": "water",
                        "elementType": "geometry.fill",
                        "stylers": [
                            {
                            "color": "#b9d3c2"
                            }
                        ]
                        },
                        {
                        "featureType": "water",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                            "color": "#92998d"
                            }
                        ]
                        }
                    ]
                                            });
                    infoWindow = new google.maps.InfoWindow;



                    // Try HTML5 geolocation.
                    if (!navigator.geolocation) {
                        handleLocationError(false, infoWindow, map.getCenter());
                        return;
                    }
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        infoWindow.setPosition(pos);
                        infoWindow.setContent('Location found.');
                        infoWindow.open(map);
                        map.setCenter(pos);
                    }, function () {
                        handleLocationError(true, infoWindow, map.getCenter());
                    });
                    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                        infoWindow.setPosition(pos);
                        infoWindow.setContent(browserHasGeolocation ?
                            'Error: The Geolocation service failed.' :
                            'Error: Your browser doesn\'t support geolocation.');
                        infoWindow.open(map);
                    }






                    var icons = {
                    housing: {
                        name: 'Housing & Real Estate',
                        icon: 'fas fa-home',
                        text: '\uf015',
                        color: 'DARKSLATEGRAY'
                    },
                    esol: {
                        name: 'Translation & Language Assistance',
                        icon: 'fas fa-language',
                        text: '\uf1ab',
                        color: 'orange'
                    },
                    legal: {
                        name: 'Legal & Immigration Services',
                        icon: 'fas fa-balance-scale',
                        text: '\uf24e',
                        color: 'silver'
                    },
                    tax: {
                        name: 'Tax & Accounting',
                        icon: 'fas fa-calculator',
                        text: '\uf1ec',
                        color: 'DARKKHAKI'
                    },
                    disablility: {
                        name: 'Disablility Services',
                        icon: 'fab fa-accessible-icon',
                        text: '\uf368',
                        color: 'blue'
                    },
                    adult: {
                        name: 'Adult Education',
                        icon: 'fas fa-book-reader',
                        text: '\uf5da',
                        color: 'Tomato'
                    },
                    children: {
                        name: 'Youth & Children Education',
                        icon: 'fas fa-apple-alt',
                        text: '\uf5d1',
                        color: 'DARKRED'
                    },
                    employment: {
                        name: 'Employment Assistance',
                        icon: 'fas fa-user-tie',
                        text: '\uf508',
                        color: 'darkgreen'
                    },
                    medical: {
                        name: 'Affordable Health Care',
                        icon: 'fas fa-clinic-medical',
                        text: '\uf7f2',
                        color: 'red'
                    },
                    dental: {
                        name: 'Dental Health',
                        icon: 'fas fa-tooth',
                        text: '\uf5c9',
                        color: 'MediumSpringGreen'
                    },
                    mental: {
                        name: 'Mental Health & Substance Use',
                        icon: 'fas fa-hospital-user',
                        text: '\uf80d',
                        color: 'SkyBlue'
                    },
                    business: {
                        name: 'New Business Counseling',
                        icon: 'fas fa-briefcase',
                        text: '\uf0b1',
                        color: 'sandybrown'
                    },
                    funeral: {
                        name: 'Funeral & Afterlife Services',
                        icon: 'fas fa-skull-crossbones',
                        text: '\uf714',
                        color: 'black'
                    },
                    transportation: {
                        name: 'Transportation',
                        icon: 'fas fa-taxi',
                        text: '\uf4ce',
                        color: 'pink'
                    },
                    religion: {
                        name: 'Faith & Religion',
                        icon: 'fas fa-pray',
                        text: '\uf683',
                        color: 'indigo'
                    },
                    ethnic: {
                        name: 'Ethnic Organization',
                        icon: 'fas fa-users',
                        text: '\uf0c0',
                        color: 'purple'
                    },
                    socialsecurity: {
                        name: 'Social Security',
                        icon: 'fas fa-hand-holding-heart',
                        text: '\uf4be',
                        color: 'Plum'
                    },
                    food: {
                        name: 'Food & Meals',
                        icon: 'fas fa-utensils',
                        text: '\uf2e7',
                        color: 'salmon'
                    },
                    disasters: {
                        name: 'Natural Disasters',
                        icon: 'fas fa-house-damage',
                        text: '\uf6f1',
                        color: 'rosybrown'
                    },
                    safety: {
                        name: 'Public Safety',
                        icon: 'fas fa-hard-hat',
                        text: '\uf807',
                        color: 'gold'
                    },
                    aid: {
                        name: 'Financial & Material Aid',
                        icon: 'fas fa-hands-helping',
                        text: '\uf4c4',
                        color: 'yellowgreen'
                    },
                    hotline: {
                        name: 'Crisis Hotline',
                        icon: 'fas fa-phone',
                        text: '\uf095',
                        color: 'slateblue'
                    },
                    volunteering: {
                        name: 'Volunteering',
                        icon: 'fas fa-people-carry',
                        text: '\uf4ce',
                        color: 'teal'
                    }
                };




                function addMarker(feature) {
                    // var ID =  parseInt(item.ResourceID);
                    var ID = feature.link;

                    var links = "<a href=\"/Home/ViewSource/" + Number(ID) + "\"target='_blank'>" + feature.webLink; + "</a>";
                    var infoWindow = new google.maps.InfoWindow({
                        content: 'Name: ' + feature.name.toUpperCase() + ' <br> Address: ' + feature.address.toUpperCase() + ' <br><p>Link:  '+ links + '</p>'
                    });

                    var icon = {
                        path: "M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0z", //SVG path of awesomefont marker
                        fillColor: icons[feature.type].color, //color of the marker
                        fillOpacity: 1,
                        strokeWeight: 0,
                        scale: 0.09, //size of the marker, careful! this scale also affects anchor and labelOrigin
                        anchor: new google.maps.Point(200, 510), //position of the icon, careful! this is affected by scale
                        labelOrigin: new google.maps.Point(205, 190) //position of the label, careful! this is affected by scale
                    }

                    var marker = new google.maps.Marker({
                        position: feature.position,
                        map: map,
                        icon: icon,
                        label: {
                            fontFamily: "'Fontawesome'",
                            text: icons[feature.type].text, //icon code
                            fontWeight: '900', //careful! some icons in FA5 only exist for specific font weights
                            color: '#FFFFFF', //color of the text inside marker
                        },

                    });
                    marker.addListener('click', function () {
                        if (infoWindow.getMap() != null) {
                            infoWindow.close();
                        }
                        else {
                            infoWindow.open(map, marker);
                        }
                    });
                    markers.push({
                        marker: marker,
                        type: feature.type,
                        rt1: feature.rt1,
                        rt2: feature.rt2,
                        rt3: feature.rt3
                    });
                }


                var features = [];
                /************************
                    *
                    * Serialization
                    *
                    *
                    * */
                // Stores entire list of Resource Models into Javascript array
                    var stringArray = @Html.Raw(Json.Serialize(Model));
                console.log(stringArray);
                //Foreach "item" inside "stirngArray"
                //The features array pushes a new google postion with the
                // "stringArray" items lat and lng
                //type is pushed as well but is static for now
                stringArray.forEach(function (item) {
                    //  var category = item.RType1.toString();
                    features.push({
                        name: item.orgName,
                        address: item.orgAddress,
                        link: item.resourceID,
                        webLink: item.websiteUrl,
                        position: new google.maps.LatLng(item.lat, item.lng),
                        type: item.rType1,
                        rt1: item.rType1,
                        rt2: item.rType2,
                        rt3:item.rType3
                    })

                })


                for (var i = 0, feature; feature = features[i]; i++) {
                    addMarker(feature);
                    console.log(feature);
                    }


                var categories = document.getElementById('cats');

                var i = 0;
                for (var key in icons) {
                    var type = icons[key];
                    var name = type.name;
                    var icon = type.icon;

                    var cdiv = document.createElement('div');
                    cdiv.setAttribute

                    cdiv.innerHTML = '<a class="btn buttonTypes justify-content-center" id="' + key + '"><i class="p-1 ' + icon + ' fa-5x" style="color:' + type.color + ';"></i><br><small>' + name + '</small></a>';
                    cdiv.className = "container-box border border-2 border-warning my-auto mr-3 pl-2";

                    categories.appendChild(cdiv);
                }


                    var buttons = document.querySelectorAll(".buttonTypes");

                    buttons.forEach(item => {
                        item.addEventListener("click", function () {

                            var clickedType = $(this).attr('id').toLowerCase();

                            console.log(clickedType);

                            for (var i = 0; i < markers.length; i++) {

                                markers[i].marker.setMap(null);

                                if (markers[i].rt1 == clickedType || markers[i].rt2 == clickedType || markers[i].rt3 == clickedType) {

                                    if (selectedMarkers.length < 1) {
                                        selectedMarkers.push(markers[i]);
                                    }

                                    else {
                                        for (var e = 0; e < selectedMarkers.length; e++) {

                                            console.log(selectedMarkers.rt1);
                                            
                                            if (selectedMarkers[e].rt1 == clickedType) {
                                                selectedMarkers.splice(e);
                                            }
                                            else {
                                            selectedMarkers.push(markers[i]);
                                            }
                                        }   
                                    }
                                    
                                }
                            }

                            for (marker in selectedMarkers) {
                                for (var i = 0; i < markers.length; i++) {
                                    if (marker.rt1 == clickedType) {
                                        marker[i].marker.icon.fillColor = icons[clickedType].color;
                                        marker[i].marker.label.text = icons[clickedType].text;
                                        marker[i].marker.setMap(map);
                                    }
                                }
                            }


                        });


                    });


                        // markers[i].marker.icon.fillColor = icons[clickedType].color;
                        // markers[i].marker.label.text = icons[clickedType].text;
                        // markers[i].marker.setMap(map);

                });
            }
    </script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAHRMZHAXLXAuowcxyVA_fHwxRDqaqjX8k&callback=initMap"></script>

}

    </div>